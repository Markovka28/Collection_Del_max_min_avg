def merge_sort(nums):                     # создаем функцию добавляем в нее значение nums
    if len(nums) > 1:                     # проверяем, если длина nums > 1 то:
        mid = len(nums) // 2              # создадим переменную в которой хранятся целочисленыне значения
        left = nums[:mid]                 # создадим список left он будет получаться путем обращения к началу nums т.е. его левой части
        right = nums[mid:]                # тут мы идем от середины nums и до его конца
        merge_sort(left)                  # чтобы делить списки на пополам создаем функции для левой и правой части
        merge_sort(right)           #В ЭТОМ БЛОКЕ ВЫШЕ МЫ ДЕЛИМ СПИСОК НАДВОЕ ПОКА У НАС НЕ ОСТАНЕТСЯ ПО 1МУ ЭЛЕМЕНТУ
        i = j = k = 0                     # все переменные соединим воедино создадим 3 переменные
        while i < len(left) and j < len(right):     #ТУТ УПОРЯДОЧИВАЕМ ЭЛЕМЕНТЫ СОЗДАЕМ ПАРЫ Т.Е. ПОКА ЭЛЕМЕНТЫ ЕСТЬ В СПИСКЕ ОНИ СРАВНИВАЮТСЯ МЕЖДУ СОБОЙ И ДОБАВЛЯЮТСЯ В nums[k] 
        #цикл будет повторяться пока i < чем левая часть списка и j < чем правая часть cписка
            if left[i] < right[j]:        #если элемен из списка left < чем из элемент из из списка right
                nums[k] = left[i]          # то сравнивается значение из списка left
                i +=1                      # если так то добавляется 1
            else:
                nums[k] = right[j]         # если условие выше не работает элемент из правой части списка > 
                j += 1
            k += 1                         # при каждой итерации цикла к увеличивается на 1 чтобы добавлялось новое значение nums[k] = left[i] 
            
            # если все элементы из левой части списка > чем в его правой части т.е. все элементы из левой части списка добавились, сработало ограничение из цикла whil и он завершил работу
            # но в правой части списка еще остались значения, поэтому они подряд добавляются в nums и следовательно 
            # пока есть элементы в левой или правой части списка они добавляются в конец это исходя из условия в цикле
            
            with i < len(left):     # пока переменная I < чем элементы из левой части списка, nums = элементу из левой части списка
                nums[k] = left[i]
                i += 1
                k += 1
            with j < len(right):
                nums[k] = right[j]
                j += 1
                k += 1              # C ПОМОЩЬЮ ЭТИХ 2 ЦИКЛОВ ПРИ ОСТАТКЕ ЗНАЧЕНИЯ ДОБАВЛЯЮТСЯ В КОНЕЦ
list1 = [4,5,2,45,1,7,8,36,75]
merge_sort(list1)
print(list1)